<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                template = "templates/mainTemplate.xhtml">

    <ui:define name="content">
        <div class="create-form col-4">
            <h:form id="createFacilityForm">
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <label>Type: </label>
                    </div>
                    <div class="form-group-item col-5">
                        <h:selectOneMenu id="typeSelect" value="#" styleClass="input-form-component" onchange="changeVisibilityInCreateForm()">
                            <f:selectItem itemValue="BasketballFacility" itemLabel="Basketball facility"/>
                            <f:selectItem itemValue="FootballFacility" itemLabel="Football facility"/>
                        </h:selectOneMenu>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <label>Name: </label>
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="name" value="#{sportsFacilityController.name}"  required="true" requiredMessage="enter sports facility name" styleClass="input-form-component">
                            <f:validator validatorId="sportsFacilityUniqueNameValidator" />
                            <f:attribute value="#{sportsFacilityController.all}" name="allFacility"/>
                        </h:inputText>
                        <h:message for="name" style="color: red; display: block;"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <label>Max Amount of People: </label>
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="amount" value="#{sportsFacilityController.field.maxAmountOfPeople}"  validatorMessage="Min amount of peope must be greater than 10" styleClass="input-form-component">
                            <f:validateLongRange minimum="11"/>
                            <f:converter converterId="javax.faces.Integer"/>
                        </h:inputText>
                        <h:message for="amount" style="color: red; display:block;"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <label>Surface Area: </label>
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="surfacearea" validatorMessage="Min surface area must be greater than 250" value="#{sportsFacilityController.field.surfaceArea}" styleClass="input-form-component">
                                <f:converter converterId="javax.faces.Double"/>
                                <f:validateDoubleRange minimum="250"/>
                        </h:inputText>
                        <h:message for="surfacearea" style="color: red; display: block;"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <label>Type of Grount: </label>
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="typofground" value="#{sportsFacilityController.field.typeOfGround}" requiredMessage="Enter type of ground" required="true" styleClass="input-form-component" />
                        <h:message for="typofground" style="color: red; display: block"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <label>Price per Houers: </label>
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="priceperhours" validatorMessage="Price per houer must be greater than 1" value="#{sportsFacilityController.pricePerHours}" styleClass="input-form-component">
                            <f:converter converterId="javax.faces.Double"/>
                            <f:validateDoubleRange minimum="1"/>
                        </h:inputText>
                        <h:message for="priceperhours" style="color: red; display: block"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <h:outputLabel class="football-facility" style="display: none" value="Fullsize: " />
                        <h:outputLabel  class="basketball-facility" value="Number of Basket: " />
                    </div>
                    <div class="form-group-item col-5">
                        <h:selectOneMenu style="display: none" value="#{sportsFacilityController.fullSize}" styleClass="input-form-component football-facility">
                            <f:selectItem itemValue="true" itemLabel="Yes"/>
                            <f:selectItem itemValue="false" itemLabel="No"/>
                        </h:selectOneMenu>
                        <h:inputText id="numberofbaket" validatorMessage="number of baket must be greter than 2" value="#{sportsFacilityController.numberOfBasket}" styleClass="input-form-component basketball-facility">
                                <f:converter converterId="javax.faces.Integer" />
                                <f:validateLongRange minimum="2"/>
                        </h:inputText>
                        <h:message for="numberofbaket" class="basketball-facility" style="color: red; display: block"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <h:outputLabel class="football-facility" style="display: none" value="Widht of Goal: " />
                        <h:outputLabel class="basketball-facility" value="Min Height of Basket: " />
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="widthofgoal" style="display: none" validatorMessage="width of goal must be greter than 2" value="#{sportsFacilityController.widthOfGoal}" styleClass="input-form-component football-facility">
                                <f:converter converterId="javax.faces.Double"/>
                            <f:validateDoubleRange minimum="2"/>
                        </h:inputText>
                        <h:inputText id="minheightofbasket" binding="#{minHeightOfBasket}"  validatorMessage="min height of basket must be greter than 1.5" value="#{sportsFacilityController.minHeightOfBasket}" styleClass="input-form-component basketball-facility">
                                <f:converter converterId="javax.faces.Double"/>
                            <f:validateDoubleRange minimum="1.5"/>
                        </h:inputText>
                        <h:message for="widthofgoal" style="color: red; display: none;" styleClass="football-facility"/>
                        <h:message for="minheightofbasket" style="color: red; display:block;" styleClass="basketball-facility"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-5">
                        <h:outputLabel class="football-facility" style="display: none" value="Height of Goal: " />
                        <h:outputLabel class="basketball-facility" value="Max Height of Basket: " />
                    </div>
                    <div class="form-group-item col-5">
                        <h:inputText id="heightofgoal" validatorMessage="height of goal must be greter than 2" style="display: none" value="#{sportsFacilityController.heightOfGoal}" styleClass="input-form-component football-facility">
                             <f:converter converterId="javax.faces.Double"/>
                            <f:validateDoubleRange minimum="2"/>
                        </h:inputText>
                        <h:inputText id="maxbasketballheight" value="#{sportsFacilityController.maxHeightOfBasket}"  styleClass="input-form-component basketball-facility">
                                <f:converter converterId="javax.faces.Double"/>
                                <f:validator validatorId="maxHeightOfBasketValidator"/>
                                <f:attribute value="#{minHeightOfBasket}" name="minHeightOfBasket"/>
                        </h:inputText>
                        <h:message for="heightofgoal" styleClass="football-facility" style="color: red; display: none"/>
                        <h:message for="maxbasketballheight" style="color: red; display:block;" styleClass="basketball-facility"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-10">
                        <h:commandButton style="display: none" styleClass="create-button football-facility"  value="Create" action="#{sportsFacilityController.createFootballFacility}"/>
                        <h:commandButton styleClass="create-button basketball-facility"  value="Create" action="#{sportsFacilityController.createBasketballFacility}"/>
                    </div>
                </div>
                <div class="form-group col-10">
                    <div class="form-group-item col-10">
                        <h:button styleClass="modify-button" value="Clear" onclick="clearForm()"/>
                    </div>
                </div>
            </h:form>
        </div>
    </ui:define>
</ui:composition>